$menu-widths: 80px 100px 134px 134px;

%nav-main-with-sub-menu {
	#nav-main {
		.nav-menu {
			.menu-item {
				display: none;
			}

			.sub-menu .menu-item {
				display: block;
			}

			.current-page-ancestor.menu-has-submenu {
				border-bottom-width: 1px;
				display: block;

				& > a {
					@include hide-text;
					@include opacity(1);

					position: relative;

					&::before {
						@include stretch;

						content: '‹ Back';
						text-align: center;
						text-indent: 0;
					}

					&::after {
						display: none;
					}
				}
			}
		}
	}

	&.top-page-slug-pt_br {
		#nav-main {
			.nav-menu {
				.current-page-ancestor.menu-has-submenu {
					& > a {
						&::before {
							content: '‹ Voltar';
						}
					}
				}
			}
		}
	}
}

#nav-main {
	@include stretch-y;
	@include span-columns(3);

	position: fixed;
	left: $grid-padding;
	z-index: 100;

	&::before {
		@include stretch;

		border: 0 solid $color-black;
		content: '';
		display: block;
		left: 0;
		position: absolute;
		top: 0;
	}

	&::after {
		border: 0 solid $color-black;
		content: '';
		left: 0;
		position: absolute;
		bottom: 0;
	}

	a {
		@include adjust-font-size-to(13px, 3);

		color: $color-white;
		display: block;
		text-align: center;
		text-decoration: none;
		text-transform: uppercase;

		&:hover {
			color: $color-gold;
		}
	}

	& > div {
		@include box-sizing(border-box);

		display: table;
		height: 100%;
	}

	.nav-menu {
		@include box-sizing(border-box);

		background-color: $color-black;
		display: table-cell;
		margin: 0;
		list-style: none;
		padding: 0;
		vertical-align: middle;
	}

	.menu-item {
		> a::after {
			border: 0 solid #1a1a1a;
			border-width: 1px 0 0 0;
			content: '';
			display: block;
			margin: 0 41%;
		}
	}

	.current-menu-item {
		& > a {
			@include opacity(0.2);

			color: #e6e6e6;
		}
	}

	.menu-has-submenu {
		&::before,
		.sub-menu {
			display: none;
		}
	}

	.current-page-ancestor,
	.current-page-ancestor.menu-has-submenu {
		&::before,
		.sub-menu {
			display: block;
		}
	}

	.sub-menu,
	.menu-has-submenu::before {
		background-color: #333;
		position: absolute;
		width: $submenu-width;
	}

	.menu-has-submenu::before {
		@include stretch-y;
		@include photoshop-drop-shadow(180, 1px, 100%, 0, $color-black);

		border-right: 1px solid #473b26;
		content: '';
	}

	.sub-menu {
		list-style: none;
		padding: 0;

		.menu-item > a::after {
			border-color: #625641;
		}
	}
}

#nav-main {
	@for $i from 1 through length($media-layout-list) {
		@include at-breakpoint(nth($media-layout-list, $i)) {
			$menu-width: nth($menu-widths, $i);

			$logo: sprite-file(nth($breakpoint-sprites, $i), logo-menu);
			$logo-height: image-height($logo);
			$logo-width: image-width($logo);
			$rodape: sprite-file(nth($breakpoint-sprites, $i), rodape-menu);
			$rodape-height: image-height($rodape);
			$rodape-width: image-width($rodape);

			$logo-border-bottom: round((lines-for-font-size($logo-height) * $base-line-height) - $logo-height);
			$logo-border-left: round(($menu-width - $logo-width) / 2);
			$logo-border-right: $menu-width - $logo-width - $logo-border-left;
			$logo-border-top: 1 * $base-line-height;

			$rodape-border-bottom: round((lines-for-font-size($rodape-height) * $base-line-height) - $rodape-height);
			$rodape-border-left: round(($menu-width - $rodape-width) / 2);
			$rodape-border-right: $menu-width - $rodape-width - $rodape-border-left;
			$rodape-border-top: 1 * $base-line-height;

			$logo-outer-height: $logo-border-top + $logo-height + $logo-border-bottom;
			$logo-outer-width: $logo-border-left + $logo-width + $logo-border-right;
			$rodape-outer-height: $rodape-border-top + $rodape-height + $rodape-border-bottom;
			$rodape-outer-width: $rodape-border-left + $rodape-width + $rodape-border-right;

			&::before {
				@include get-sprite(nth($breakpoint-sprites, $i), logo-menu);
				border-width: $logo-border-top $logo-border-right $logo-border-bottom $logo-border-left;
			}

			&::after {
				@include get-sprite(nth($breakpoint-sprites, $i), rodape-menu);
				border-width: $rodape-border-top $rodape-border-right $rodape-border-bottom $rodape-border-left;
			}

			& > div {
				padding-bottom: $rodape-outer-height;
				padding-top: $logo-outer-height;
				width: $menu-width;
			}

			.sub-menu,
			.menu-has-submenu::before {
				left: $logo-outer-width;
			}

			.menu-has-submenu::before {
				margin-top: - $logo-outer-height;
			}

//			.current-page-ancestor.menu-has-submenu {
//				&::before {
//					margin-top: - $logo-outer-height;
//				}
//			}
		}
	}
}

#nav-language {
	position: absolute;
	right: rhythm(1);
	top: rhythm(1);
	z-index: 120;

	.nav-menu {
		margin: 0;
		padding-top: language-sprite-height(br);
		position: relative;

		&:hover {
			@include clearfix;

			.menu-item {
				display: block;
			}
		}
	}

	.menu-item {
		display: none;
		list-style: none;

		a {
			@include hide-text;
			@include inline-block;
		}
	}

	.current-menu-item,
	.current-page-ancestor {
		display: block;
		position: absolute;
		right: 0;
		top: 0;
	}

	.slug-portugues a {
		@include language-sprite(br);
	}

	.slug-english a {
		@include language-sprite(en);
	}
}

.bx-wrapper {
	$bx-width: 53px;

	&:hover {
		.bx-prev,
		.bx-next {
			@include opaque;
		}
	}

	.bx-viewport {
		z-index: 1;
	}

	.bx-controls {
		@include stretch;

		margin-left: 134px + $grid-padding;
	}

	.bx-prev,
	.bx-next {
		@include hide-text;
		@include reset-focus;
		@include stretch-y;
		@include transition-duration(0.25s);
		@include transition-property(opacity);
		@include transition-timing-function(ease-in);
		@include transparent;

		background: rgba(0, 0, 0, .5);
		left: 0;
		width: $bx-width;
		z-index: 110;

		&::before {
			@include inline-block;

			position: absolute;
			content: '';
		}
	}

	.bx-next {
		left: auto;
		right: 0;
	}

	@for $i from 1 through length($media-layout-list) {
		@include at-breakpoint(nth($media-layout-list, $i)) {
			.bx-controls {
				margin-left: nth($menu-widths, $i) + $grid-padding;
			}

			& .bx-prev::before {
				$img: sprite-file(nth($breakpoint-sprites, $i), arrow-left);

				@include get-sprite(nth($breakpoint-sprites, $i), arrow-left);

				left: 50%;
				margin-left: - image-width($img) / 2;
				margin-top: - image-height($img) / 2;
				top: 50%;
			}
			& .bx-next::before {
				$img: sprite-file(nth($breakpoint-sprites, $i), arrow-right);

				@include get-sprite(nth($breakpoint-sprites, $i), arrow-right);

				margin-right: - image-width($img) / 2;
				margin-top: - image-height($img) / 2;
				right: 50%;
				top: 50%;
			}
		}
	}
}